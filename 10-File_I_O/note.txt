The random-access memory is volatile, and its content is lost once the program 
terminates. In order to persist the data forever we use files.
A file is data stored in a storage device.
A C program can talk to the file by reading content from it and writing content to it.


FILE POINTER 
A “FILE” is a structure which needs to be created for opening the file.
A file pointer is a pointer to this structure of the file. 
(FILE pointer is needed for communication between the file and the program).


Modes
"r" -> open for reading
"rb" -> open for reading in binary
"w" -> open for writing // If the file exists, the contents will be 
overwritten
"wb" -> open for writing in binary
"a" -> open for append // If the file does not exist, it will be created

fclose() is good
as if program runs for 10 hour and file is needed for 10 min ,you should close the file
This will tell the compiler that we are done working with this file and the associated 
resources could be freed.

EOF : END OF FILE
fgetc returns EOF when all the characters from a file have been read. So, we can write a 
check like below to detect end of file: